from datetime import datetime, timedelta

from models import *


def getOrCreateUserById(user_id, create=True):
    try:
        return con.execute(select(User).where(User.columns.vk_id == user_id)).fetchone()._mapping  # NOQA
    except AttributeError:
        if create:
            conection.execute(insert(User).values(vk_id=user_id,
                                                  registrationdate=datetime.now(),
                                                  name="",
                                                  lasttimeusedbonus=datetime.now() - timedelta(seconds=86400),
                                                  money=0,
                                                  gb=0,
                                                  crowns=0,
                                                  clan="",
                                                  clan_invites="",
                                                  hairstyle="Ничего",
                                                  tattoo="Ничего",
                                                  head="Ничего",
                                                  tshort="Ничего",
                                                  costume="Ничего",
                                                  shoes="Ничего",
                                                  accessories="Ничего",
                                                  business="",
                                                  businessmoney=0,
                                                  businessupgrade=False,
                                                  businessworkers=0,
                                                  businesslastsalary=datetime.now(),
                                                  asic=0,
                                                  dragonmintt1=0,
                                                  fm2018bt400=0,
                                                  genesis=0,
                                                  gigawatt=0,
                                                  gorilla=0,
                                                  lastsellingbtc=datetime.now().replace(year=2040),
                                                  btc=0,
                                                  printer="",
                                                  cartridge=100,
                                                  lasttakemoney=datetime.now(),
                                                  car="",
                                                  tires=1,
                                                  rims=1,
                                                  engine=1,
                                                  fueltank=1,
                                                  suspension=1,
                                                  brakes=1,
                                                  turbines=1,
                                                  control=1,
                                                  chip=0,
                                                  num="",
                                                  hp=0,
                                                  maxv=0,
                                                  do100=0,
                                                  rr=0,
                                                  lastrace=datetime.now(),
                                                  power=1,
                                                  dmg=0,
                                                  lvl=1,
                                                  xp=0,
                                                  yacht="",
                                                  airplane="",
                                                  helicopter="",
                                                  home="",
                                                  pet="",
                                                  petlvl=0,
                                                  petsatiety=0,
                                                  petjoy=0,
                                                  petage=datetime.now(),
                                                  petlasthike=datetime.now(),
                                                  phone="",
                                                  pc="",
                                                  scase=0,
                                                  pcase=0,
                                                  dcase=0,
                                                  status="user",
                                                  potion="",
                                                  energy=10,
                                                  iron=0,
                                                  gold=0,
                                                  diamonds=0,
                                                  matter=0,
                                                  antimatter=0,
                                                  one="❌",
                                                  two="❌",
                                                  three="❌",
                                                  four="❌",
                                                  five="❌",
                                                  six="❌",
                                                  seven="❌",
                                                  eight="❌",
                                                  nine="❌",
                                                  ten="❌",
                                                  eleven="❌",
                                                  tradewinstreek=0,
                                                  cupwinstreek=0,
                                                  casinowinstreek=0,
                                                  cubewinstreek=0,
                                                  businesspaymentval=0,
                                                  farmpaymentval=0,
                                                  caseopenval=0,
                                                  transfermoneyval=0,
                                                  racewinstreek=0,
                                                  lasthike=datetime.now().replace(year=datetime.now().year - 1),
                                                  rank=1,
                                                  words=0,
                                                  word="",
                                                  randomword="",
                                                  pension=0,
                                                  lastpension=datetime.now(),
                                                  bank=0,
                                                  lastdive=datetime.now().replace(year=datetime.now().year - 1),
                                                  lasthack=datetime.now().replace(year=datetime.now().year - 1),
                                                  divelvl=1,
                                                  fish=5,
                                                  presidentbid=0,
                                                  energylimit=0,
                                                  lastpost=datetime.now().replace(year=datetime.now().year - 1),
                                                  firstindouble=True,
                                                  doublebonus=datetime.now().replace(year=datetime.now().year - 1),
                                                  banned=datetime.now().replace(year=datetime.now().year - 1),
                                                  numbers=""
                                                  ))
            conection.commit()
            return con.execute(select(User).where(User.columns.vk_id == user_id)).fetchone()._mapping  # NOQA


def getOrCreateClanById(user_id, buy=False):
    try:
        return con.execute(select(Clan).where(Clan.columns.owner_id == user_id)).fetchone()._mapping  # NOQA
    except AttributeError:
        if buy:
            id = len(con.execute(select(Clan)).fetchall()) + 1
            conection.execute(insert(Clan).values(id=id,
                                                  owner_id=user_id,
                                                  name="Никто",
                                                  users="",
                                                  base=1,
                                                  rating=0,
                                                  coffers=0,
                                                  wins=0,
                                                  loses=0,
                                                  coffers_history="",
                                                  knights=0,
                                                  archers=0,
                                                  balloons=0,
                                                  dragons=0,
                                                  power=0,
                                                  shield=datetime.fromtimestamp(datetime.now().timestamp() + 86400)
                                                  ))
            conection.commit()
            return con.execute(select(Clan).where(Clan.columns.owner_id == user_id)).fetchone()._mapping  # NOQA
